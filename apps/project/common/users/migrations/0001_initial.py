# Generated by Django 4.2.21 on 2025-09-17 03:56

import apps.project.common.users.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import encrypted_model_fields.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('language', models.CharField(blank=True, choices=[('es', 'Spanish'), ('en', 'English')], default='es', max_length=4, null=True, verbose_name='language')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('default_order', models.PositiveIntegerField(blank=True, default=1, null=True, verbose_name='priority')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150, verbose_name='names')),
                ('last_name', models.CharField(max_length=150, verbose_name='surnames')),
                ('email', encrypted_model_fields.fields.EncryptedEmailField(unique=True, verbose_name='email address')),
                ('email_hash', models.CharField(editable=False, max_length=64, unique=True)),
                ('user_type', models.CharField(choices=[('I', 'Intermediary'), ('R', 'Representative'), ('H', 'Holder'), ('B', 'Buyer')], default='B', max_length=2, verbose_name='User')),
                ('citizenship_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Citizenship Number')),
                ('is_verified_holder', models.BooleanField(default=False, verbose_name='Verified Holder')),
                ('phone_number_code', models.CharField(choices=[('57-CO', '+57 Colombia'), ('1-US', '+1 United States'), ('1-AS', '+1 American Samoa'), ('1-AI', '+1 Anguilla'), ('1-AG', '+1 Antigua and Barbuda'), ('54-AR', '+54 Argentina'), ('1-BS', '+1 Bahamas'), ('1-BB', '+1 Barbados'), ('501-BZ', '+501 Belize'), ('1-BM', '+1 Bermuda'), ('591-BO', '+591 Bolivia'), ('55-BR', '+55 Brazil'), ('1-VG', '+1 British Virgin Islands'), ('1-CA', '+1 Canada'), ('1-KY', '+1 Cayman Islands'), ('56-CL', '+56 Chile'), ('506-CR', '+506 Costa Rica'), ('1-DM', '+1 Dominica'), ('1-DO', '+1 Dominican Republic'), ('593-EC', '+593 Ecuador'), ('503-SV', '+503 El Salvador'), ('500-FK', '+500 Falkland Islands'), ('594-GF', '+594 French Guiana'), ('299-GL', '+299 Greenland'), ('1-GD', '+1 Grenada'), ('1-GU', '+1 Guam'), ('502-GT', '+502 Guatemala'), ('592-GY', '+592 Guyana'), ('504-HN', '+504 Honduras'), ('1-JM', '+1 Jamaica'), ('52-MX', '+52 Mexico'), ('1-MS', '+1 Montserrat'), ('505-NI', '+505 Nicaragua'), ('1-MP', '+1 Northern Mariana Islands'), ('507-PA', '+507 Panama'), ('595-PY', '+595 Paraguay'), ('51-PE', '+51 Peru'), ('1-PR', '+1 Puerto Rico'), ('1-KN', '+1 Saint Kitts and Nevis'), ('1-LC', '+1 Saint Lucia'), ('1-VC', '+1 Saint Vincent and the Grenadines'), ('1-SX', '+1 Sint Maarten (Dutch part)'), ('597-SR', '+597 Suriname'), ('1-TT', '+1 Trinidad and Tobago'), ('1-TC', '+1 Turks and Caicos Islands'), ('598-UY', '+598 Uruguay'), ('1-VI', '+1 United States Virgin Islands'), ('58-VE', '+58 Venezuela'), ('355-AL', '+355 Albania'), ('376-AD', '+376 Andorra'), ('43-AT', '+43 Austria'), ('375-BY', '+375 Belarus'), ('32-BE', '+32 Belgium'), ('387-BA', '+387 Bosnia and Herzegovina'), ('359-BG', '+359 Bulgaria'), ('385-HR', '+385 Croatia'), ('420-CZ', '+420 Czechia'), ('45-DK', '+45 Denmark'), ('372-EE', '+372 Estonia'), ('358-FI', '+358 Finland'), ('33-FR', '+33 France'), ('49-DE', '+49 Germany'), ('30-GR', '+30 Greece'), ('44-GG', '+44 Guernsey'), ('36-HU', '+36 Hungary'), ('354-IS', '+354 Iceland'), ('353-IE', '+353 Ireland'), ('44-IM', '+44 Isle of Man'), ('39-IT', '+39 Italy'), ('44-JE', '+44 Jersey'), ('383-XK', '+383 Kosovo'), ('371-LV', '+371 Latvia'), ('423-LI', '+423 Liechtenstein'), ('370-LT', '+370 Lithuania'), ('352-LU', '+352 Luxembourg'), ('373-MD', '+373 Moldova'), ('377-MC', '+377 Monaco'), ('382-ME', '+382 Montenegro'), ('31-NL', '+31 Netherlands'), ('389-MK', '+389 North Macedonia'), ('47-NO', '+47 Norway'), ('48-PL', '+48 Poland'), ('351-PT', '+351 Portugal'), ('40-RO', '+40 Romania'), ('378-SM', '+378 San Marino'), ('381-RS', '+381 Serbia'), ('421-SK', '+421 Slovakia'), ('386-SI', '+386 Slovenia'), ('34-ES', '+34 Spain'), ('46-SE', '+46 Sweden'), ('41-CH', '+41 Switzerland'), ('380-UA', '+380 Ukraine'), ('44-GB', '+44 United Kingdom'), ('39-VA', '+39 Vatican City'), ('7-RU', '+7 Russia'), ('7-KZ', '+7 Kazakhstan'), ('213-DZ', '+213 Algeria'), ('244-AO', '+244 Angola'), ('229-BJ', '+229 Benin'), ('267-BW', '+267 Botswana'), ('226-BF', '+226 Burkina Faso'), ('257-BI', '+257 Burundi'), ('237-CM', '+237 Cameroon'), ('236-CF', '+236 Central African Republic'), ('235-TD', '+235 Chad'), ('269-KM', '+269 Comoros'), ('242-CG', '+242 Republic of the Congo'), ('253-DJ', '+253 Djibouti'), ('243-CD', '+243 Democratic Republic of the Congo'), ('20-EG', '+20 Egypt'), ('240-GQ', '+240 Equatorial Guinea'), ('291-ER', '+291 Eritrea'), ('268-SZ', '+268 Eswatini'), ('251-ET', '+251 Ethiopia'), ('241-GA', '+241 Gabon'), ('220-GM', '+220 Gambia'), ('233-GH', '+233 Ghana'), ('224-GN', '+224 Guinea'), ('245-GW', '+245 Guinea-Bissau'), ('225-CI', '+225 Ivory Coast'), ('254-KE', '+254 Kenya'), ('266-LS', '+266 Lesotho'), ('231-LR', '+231 Liberia'), ('218-LY', '+218 Libya'), ('261-MG', '+261 Madagascar'), ('265-MW', '+265 Malawi'), ('223-ML', '+223 Mali'), ('222-MR', '+222 Mauritania'), ('230-MU', '+230 Mauritius'), ('262-YT', '+262 Mayotte'), ('212-MA', '+212 Morocco'), ('258-MZ', '+258 Mozambique'), ('264-NA', '+264 Namibia'), ('227-NE', '+227 Niger'), ('234-NG', '+234 Nigeria'), ('262-RE', '+262 RÃ©union'), ('250-RW', '+250 Rwanda'), ('221-SN', '+221 Senegal'), ('248-SC', '+248 Seychelles'), ('232-SL', '+232 Sierra Leone'), ('252-SO', '+252 Somalia'), ('27-ZA', '+27 South Africa'), ('211-SS', '+211 South Sudan'), ('249-SD', '+249 Sudan'), ('255-TZ', '+255 Tanzania'), ('228-TG', '+228 Togo'), ('216-TN', '+216 Tunisia'), ('256-UG', '+256 Uganda'), ('212-EH', '+212 Western Sahara'), ('260-ZM', '+260 Zambia'), ('263-ZW', '+263 Zimbabwe'), ('93-AF', '+93 Afghanistan'), ('880-BD', '+880 Bangladesh'), ('975-BT', '+975 Bhutan'), ('673-BN', '+673 Brunei'), ('855-KH', '+855 Cambodia'), ('86-CN', '+86 China'), ('357-CY', '+357 Cyprus'), ('670-TL', '+670 East Timor'), ('91-IN', '+91 India'), ('62-ID', '+62 Indonesia'), ('98-IR', '+98 Iran'), ('964-IQ', '+964 Iraq'), ('972-IL', '+972 Israel'), ('81-JP', '+81 Japan'), ('962-JO', '+962 Jordan'), ('856-LA', '+856 Laos'), ('961-LB', '+961 Lebanon'), ('60-MY', '+60 Malaysia'), ('960-MV', '+960 Maldives'), ('976-MN', '+976 Mongolia'), ('95-MM', '+95 Myanmar'), ('977-NP', '+977 Nepal'), ('850-KP', '+850 North Korea'), ('92-PK', '+92 Pakistan'), ('970-PS', '+970 Palestine'), ('63-PH', '+63 Philippines'), ('65-SG', '+65 Singapore'), ('82-KR', '+82 South Korea'), ('94-LK', '+94 Sri Lanka'), ('963-SY', '+963 Syria'), ('66-TH', '+66 Thailand'), ('90-TR', '+90 Turkey'), ('84-VN', '+84 Vietnam'), ('61-AU', '+61 Australia'), ('61-CX', '+61 Christmas Island'), ('61-CC', '+61 Cocos (Keeling) Islands'), ('679-FJ', '+679 Fiji'), ('689-PF', '+689 French Polynesia'), ('686-KI', '+686 Kiribati'), ('692-MH', '+692 Marshall Islands'), ('691-FM', '+691 Micronesia (Federated States)'), ('674-NR', '+674 Nauru'), ('687-NC', '+687 New Caledonia'), ('64-NZ', '+64 New Zealand'), ('680-PW', '+680 Palau'), ('675-PG', '+675 Papua New Guinea'), ('685-WS', '+685 Samoa'), ('677-SB', '+677 Solomon Islands'), ('676-TO', '+676 Tonga'), ('688-TV', '+688 Tuvalu'), ('678-VU', '+678 Vanuatu'), ('681-WF', '+681 Wallis and Futuna')], default='57-CO', max_length=7, verbose_name='Phone Number Code')),
                ('phone_number', encrypted_model_fields.fields.EncryptedCharField(default='', verbose_name='Phone Number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'apps_users_user',
                'unique_together': {('username', 'email')},
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AddressModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, choices=[('es', 'Spanish'), ('en', 'English')], default='es', max_length=4, null=True, verbose_name='language')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('default_order', models.PositiveIntegerField(blank=True, default=1, null=True, verbose_name='priority')),
                ('address_line_1', encrypted_model_fields.fields.EncryptedCharField(verbose_name='Address Line 1')),
                ('address_line_2', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True, verbose_name='Address Line 2 (Optional)')),
                ('postal_code', models.CharField(max_length=10, verbose_name='Postal/Zip Code')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'db_table': 'apps_users_address',
            },
        ),
        migrations.CreateModel(
            name='CountryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, choices=[('es', 'Spanish'), ('en', 'English')], default='es', max_length=4, null=True, verbose_name='language')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('default_order', models.PositiveIntegerField(blank=True, default=1, null=True, verbose_name='priority')),
                ('country_name', models.CharField(max_length=100, unique=True, verbose_name='Country Name')),
                ('country_code', models.CharField(max_length=5, unique=True, verbose_name='Country Code')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'db_table': 'apps_users_country',
            },
        ),
        migrations.CreateModel(
            name='UserPersonalInformationModel',
            fields=[
                ('language', models.CharField(blank=True, choices=[('es', 'Spanish'), ('en', 'English')], default='es', max_length=4, null=True, verbose_name='language')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('default_order', models.PositiveIntegerField(blank=True, default=1, null=True, verbose_name='priority')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('birth_date', encrypted_model_fields.fields.EncryptedDateField(default=apps.project.common.users.models.UserPersonalInformationModel.default_birth_date, validators=[apps.project.common.users.models.UserPersonalInformationModel.validate_birth_date], verbose_name='Birth Date')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=1, verbose_name='Gender')),
                ('citizenship_country', encrypted_model_fields.fields.EncryptedCharField(verbose_name='Citizenship')),
                ('passport_id', encrypted_model_fields.fields.EncryptedCharField(verbose_name='Passport Identification')),
                ('date_of_issue', models.DateField(default=django.utils.timezone.now, verbose_name='Date of Issue')),
                ('issuing_authority', models.CharField(max_length=100, verbose_name='Issuing Authority')),
                ('date_of_expiry', models.DateField(default=apps.project.common.users.models.UserPersonalInformationModel.default_date_of_expiry, verbose_name='Date of Expiry')),
                ('passport_image', models.ImageField(upload_to=apps.project.common.users.models.UserPersonalInformationModel.passport_directory_path, verbose_name='Passport Image')),
                ('signature', models.ImageField(upload_to=apps.project.common.users.models.UserPersonalInformationModel.signature_directory_path, verbose_name='Beneficiary signature')),
                ('addresses', models.ManyToManyField(blank=True, related_name='personal_information', to='users.addressmodel')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personal_information', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Personal Information',
                'verbose_name_plural': 'User Personal Information',
                'db_table': 'apps_users_userpersonalpnformation',
            },
        ),
        migrations.CreateModel(
            name='StateModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, choices=[('es', 'Spanish'), ('en', 'English')], default='es', max_length=4, null=True, verbose_name='language')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('default_order', models.PositiveIntegerField(blank=True, default=1, null=True, verbose_name='priority')),
                ('state_name', models.CharField(max_length=100, verbose_name='State Name')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_state_country', to='users.countrymodel')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
                'db_table': 'apps_users_state',
                'unique_together': {('state_name', 'country')},
            },
        ),
        migrations.CreateModel(
            name='CityModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, choices=[('es', 'Spanish'), ('en', 'English')], default='es', max_length=4, null=True, verbose_name='language')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('default_order', models.PositiveIntegerField(blank=True, default=1, null=True, verbose_name='priority')),
                ('city_name', models.CharField(max_length=100, verbose_name='City Name')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_city_state', to='users.statemodel')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
                'db_table': 'apps_users_city',
                'unique_together': {('city_name', 'state')},
            },
        ),
        migrations.AddField(
            model_name='addressmodel',
            name='city',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_address_city', to='users.citymodel'),
        ),
        migrations.AddField(
            model_name='addressmodel',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_address_country', to='users.countrymodel'),
        ),
        migrations.AddField(
            model_name='addressmodel',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_address_state', to='users.statemodel'),
        ),
    ]
